{
  "_args": [
    [
      {
        "raw": "angular2-in-memory-web-api",
        "scope": null,
        "escapedName": "angular2-in-memory-web-api",
        "name": "angular2-in-memory-web-api",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\robert\\documents\\angularapps\\ng2-tour-of-heroes"
    ]
  ],
  "_from": "angular2-in-memory-web-api@latest",
  "_id": "angular2-in-memory-web-api@0.0.21",
  "_inCache": true,
  "_location": "/angular2-in-memory-web-api",
  "_nodeVersion": "5.11.1",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/angular2-in-memory-web-api-0.0.21.tgz_1474824816233_0.9471730967052281"
  },
  "_npmUser": {
    "name": "wardbell",
    "email": "wardbell@hotmail.com"
  },
  "_npmVersion": "3.8.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "angular2-in-memory-web-api",
    "scope": null,
    "escapedName": "angular2-in-memory-web-api",
    "name": "angular2-in-memory-web-api",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/angular2-in-memory-web-api/-/angular2-in-memory-web-api-0.0.21.tgz",
  "_shasum": "20b4ada639343862da3274d41f7a0c66996bf619",
  "_shrinkwrap": null,
  "_spec": "angular2-in-memory-web-api",
  "_where": "C:\\Users\\robert\\documents\\angularapps\\ng2-tour-of-heroes",
  "author": "",
  "bugs": {
    "url": "https://github.com/angular/in-memory-web-api/issues"
  },
  "dependencies": {},
  "description": "An in-memory web api for Angular 2 demos and tests",
  "devDependencies": {
    "@angular/common": "^2.0.0",
    "@angular/compiler": "^2.0.0",
    "@angular/core": "^2.0.0",
    "@angular/http": "^2.0.0",
    "@angular/platform-browser": "^2.0.0",
    "canonical-path": "0.0.2",
    "concurrently": "^2.1.0",
    "core-js": "^2.4.1",
    "del": "^2.2.0",
    "gulp": "^3.9.1",
    "gulp-bump": "^2.0.1",
    "gulp-load-plugins": "^1.2.4",
    "gulp-task-listing": "^1.0.1",
    "gulp-util": "^3.0.7",
    "http-server": "^0.9.0",
    "jasmine-core": "~2.4.1",
    "karma": "^0.13.22",
    "karma-chrome-launcher": "^1.0.1",
    "karma-cli": "^1.0.0",
    "karma-htmlfile-reporter": "^0.3.1",
    "karma-jasmine": "^1.0.2",
    "lite-server": "^2.2.0",
    "lodash": "^4.13.1",
    "reflect-metadata": "^0.1.3",
    "rimraf": "^2.5.2",
    "rxjs": "5.0.0-beta.12",
    "tslint": "^3.15.1",
    "typescript": "^2.0.2",
    "typings": "^1.2.0",
    "yargs": "^4.7.1",
    "zone.js": "^0.6.25"
  },
  "directories": {},
  "dist": {
    "shasum": "20b4ada639343862da3274d41f7a0c66996bf619",
    "tarball": "https://registry.npmjs.org/angular2-in-memory-web-api/-/angular2-in-memory-web-api-0.0.21.tgz"
  },
  "gitHead": "0b471fcac0f53cb050e05e0f57d2c14cc300cdf5",
  "homepage": "https://github.com/angular/in-memory-web-api#readme",
  "jsnext:main": "esm/index.js",
  "keywords": [],
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "filipesilva",
      "email": "filipematossilva@gmail.com"
    },
    {
      "name": "wardbell",
      "email": "wardbell@hotmail.com"
    }
  ],
  "name": "angular2-in-memory-web-api",
  "optionalDependencies": {},
  "peerDependencies": {
    "@angular/core": "^2.0.0",
    "@angular/http": "^2.0.0",
    "reflect-metadata": "^0.1.3",
    "rxjs": "5.0.0-beta.12",
    "zone.js": "^0.6.25"
  },
  "readme": "# Angular 2 in-memory-web-api\n\n>**UPDATE NOTICE**\n>\n>This is the last of the npm packages under the name `angular2-in-memory-web-api`. \nThe new package name is (or soon will be) `angular-in-memory-web-api`. \nAll versions after 0.0.21 are (or soon will be) shipped under this new name.\n**Be sure to update your `package.json` and import statements accordingly**.\n\nAn in-memory web api for Angular demos and tests.\n\nIt will intercept HTTP requests that would otherwise go to the remote server\nvia the Angular `XHRBackend` service\n\nThis in-memory web api service processes an HTTP request and \nreturns an `Observable` of HTTP `Response` object\nin the manner of a RESTy web api.\nIt natively handles URI patterns in the form :base/:collectionName/:id?\n\nExamples:\n```\n  // for store with a 'heroes' collection\n  GET api/heroes          // all heroes\n  GET api/heroes/42       // the character with id=42\n  GET api/heroes?name=^j  // 'j' is a regex; returns heroes whose name contains 'j' or 'J'\n  GET api/heroes.json/42  // ignores the \".json\"\n```\nAlso accepts\n  \"commands\":\n  ```\n    POST \"resetDb\",\n    GET/POST \"config\"\" - get or (re)set the config\n  ```\n\n## Basic usage\nCreate an `InMemoryDataService` class that implements `InMemoryDataService`.\n\nAt minimum it must implement `createDb` which \ncreates a \"database\" hash whose keys are collection names\nand whose values are arrays of collection objects to return or update.\nFor example:\n```\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\n\nexport class InMemHeroService implements InMemoryDbService {\n  createDb() {\n    let heroes = [\n      { id: '1', name: 'Windstorm' },\n      { id: '2', name: 'Bombasto' },\n      { id: '3', name: 'Magneta' },\n      { id: '4', name: 'Tornado' }\n    ];\n    return {heroes};\n  }\n}\n```\n\nRegister this module and your service implementation in `AppModule.imports`\ncalling the `forRoot` static method with this service class and optional configuration object:\n```\n// other imports\nimport { HttpModule }           from '@angular/http';\nimport { InMemoryWebApiModule } from 'angular-in-memory-web-api';\n\nimport { InMemHeroService }     from '../app/hero-data';\n@NgModule({\n imports: [\n   HttpModule,\n   InMemoryWebApiModule.forRoot(InMemHeroService),\n   ...\n ],\n ...\n})\nexport class AppModule { ... }\n```\n\nSee examples in the Angular.io such as the\n[Server Communication](https://angular.io/docs/ts/latest/guide/server-communication.html) and\n[Tour of Heroes](https://angular.io/docs/ts/latest/tutorial/toh-pt6.html) chapters.\n\n# Bonus Features\nSome features are not readily apparent in the basic usage example.\n\nThe `InMemoryBackendConfigArgs` defines a set of options. Add them as the second `forRoot` argument:\n```\n   InMemoryWebApiModule.forRoot(InMemHeroService, { delay: 500 }),\n```\n\n## Simple query strings\nPass custom filters as a regex pattern via query string. \nThe query string defines which property and value to match.\n\nFormat: `/app/heroes/?propertyName=regexPattern`\n\nThe following example matches all names containing the letter 'j' in the heroes collection.\n\n`/app/heroes/?name=j+`\n\n# To Do\n* add tests (shameful omission!)\n\n# Build Instructions\n\nMostly gulp driven.\n\nThe following describes steps for updating from one Angular version to the next\n\n>This is essential even when there are no changes of real consequence.\nNeglecting to synchronize Angular 2 versions\ntriggers typescript definition duplication error messages when\ncompiling your application project.\n\n- `gulp bump` - up the package version number\n\n- update `CHANGELOG.MD` to record the change\n\n- update the dependent version(s) in `package.json`\n\n- `npm install` the new package(s) (make sure they really do install!)<br>\n   `npm list --depth=0`\n\n- consider updating typings, install individually/several:\n  `npm run typings -- install packagename --ambient --save`\n\n   **NB: Do not add to `npm postinstall` as that screws up consumers!**\n\n- `npm run typings install`\n\n- `npm run tsc` to confirm the project compiles w/o error (sanity check)\n\n -- NO TESTS YET ... BAD --\n\n- `gulp build`\n- commit and push\n\n- `npm publish`\n\n- Fix and validate angular.io docs samples\n\n- Add two tags to the release commit with for unpkg\n  - the version number\n  - 'latest'\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/angular/in-memory-web-api.git"
  },
  "scripts": {
    "build-and-test": "concurrently  \"npm run tsc\" \"npm run test\"",
    "http-server": "tsc && http-server",
    "lint": "tslint ./src/*.ts -t verbose",
    "lite": "lite-server",
    "live": "live-server",
    "start": "concurrently \"npm run tsc:w\" \"npm run lite\" ",
    "test": "karma start karma.conf.js",
    "tsc": "tsc",
    "tsc:w": "tsc -w",
    "typings": "typings"
  },
  "version": "0.0.21"
}
